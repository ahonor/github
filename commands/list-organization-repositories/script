#!/usr/bin/env bash
#
#/ command: github:list-organization-repositories: "List repositories for the specified organization."
#
#/ usage: rerun github:list-organization-repositories  --organization <> [ --url <https://api.github.com>] 
#
#/ rerun env variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option variables: ORGANIZATION URL

# Read module function library.
. $RERUN_MODULE_DIR/lib/functions.sh || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------
# * Trap calls `rerun_die` with standard message.
# * Exit upon command errors or accessing unset variables.
#   * See [set](http://ss64.com/bash/set.html)
trap 'rerun_die $? "*** command failed: github:list-organization-repositories. ***"' ERR
set -o nounset -o pipefail

# Parse the command options.
[[ -r $RERUN_MODULE_DIR/commands/list-organization-repositories/options.sh ]] && {
    . $RERUN_MODULE_DIR/commands/list-organization-repositories/options.sh || rerun_die "Failed loading options parser."
    rerun_options_parse "$@"
}


# ------------------------------
# Your implementation goes here.
# ------------------------------


RESPONSE=$(mktemp)

# List the repositories.
curl -s ${URL}/orgs/${ORGANIZATION}/repos > ${RESPONSE}

# Check for an API call error.
if [[ $(cat ${RESPONSE} | jq -r '.[]') = "Not Found" ]]
then
  rerun_die "the organization was not found"
fi

# Display the names and identifiers.
cat ${RESPONSE} | jq -r '.[] | .name'

rm -f ${RESPONSE}

exit $?

# Done
