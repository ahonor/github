#!/usr/bin/env bash

# To implement this command, edit the "Command implementation" section below. 

# Usage
# -----

# Comments prefixed with `#/` are managed by stubbs.
# The `command` and `usage` comments describe the command
# and show its options.
# 
#/ command: github:delete-repo-deploy-keys: "Delete repository deploy key(s) matching the specified title"
#/ usage: rerun github:delete-repo-deploy-keys  --owner <>  --repository <> [ --title <${USER}@${HOSTNAME}>] [ --api-url <https://api.github.com>] [ --authorization-file <$HOME/.rerun/github.authorization>] 

# Load common functions
# ---------------------

# Load the function library for this module.
# This loads rerun functions, too.
. $RERUN_MODULE_DIR/lib/functions.sh delete-repo-deploy-keys || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

# Error handling
# ---------------

# This script is designed to _fail-fast_.

# Trap errors and exit. The call to `rerun_die` will print the
# the error message and exit with the error command exit status. 

trap 'rerun_die $? "*** command failed: github:delete-repo-deploy-keys. ***"' ERR

# Run [set] `nounset` to treat unset variables as errors. Set [pipefail]
# so a pipeline return status is the value of the last 
# (rightmost) command to exit with non-zero status.
#
# [set]: http://ss64.com/bash/set.html
# [pipefail]: http://www.gnu.org/software/bash/manual/html_node/Pipelines.html

set -o nounset -o pipefail

# Command variables
# -----------------

# This command script can access the following variables
# declared by `rerun` or by the option parser function.

#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: OWNER REPOSITORY TITLE API_URL AUTHORIZATION_FILE

# The `rerun_options_parse` function processes the command line
# arguments. Each accepted command line flag results in setting 
# one the corresponding option variables.

rerun_options_parse "$@"


# Command implementation
# ----------------------

# - - -
# Put the command implementation here.
# - - -

# Run through the list of matching titles.
for ID in $(rerun github:list-repo-deploy-keys --owner ${OWNER} --repository ${REPOSITORY} | grep "^$TITLE:" | cut -d: -f2)
do
  curl_github_api ${AUTHORIZATION_FILE} ${API_URL} DELETE /repos/${OWNER}/${REPOSITORY}/keys/${ID}
  echo "deleted $ID"
done

exit $?

# Done
